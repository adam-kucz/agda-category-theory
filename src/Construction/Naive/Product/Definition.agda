{-# OPTIONS --exact-split --prop --safe #-}
open import Category
open import PropUniverses

module Construction.Product.Definition โฆ C : Category ๐ฐ ๐ฑ โฆ where

open import Proposition.Identity
open import Logic

record IsProduct
    (A B : obj)
    (P : obj)
    (ฯโ : P ~> A)
    (ฯโ : P ~> B)
    : ---------------------
    ๐ฐ โ ๐ฑ แต
  where
  field
    to-product :
      {X : obj}
      (f : X ~> A)
      (g : X ~> B)
      โ -------------------------------------------
      โ! ฮป (h : X ~> P) โ ฯโ โ h == f โง ฯโ โ h == g

record Product (A B : obj) : ๐ฐ โ ๐ฑ ห where
  field
    object : obj
    ฯโ : object ~> A
    ฯโ : object ~> B
    โฆ def โฆ : IsProduct A B object ฯโ ฯโ

open Product โฆ โฆ โฆ public

infixl 180 _ร_
_ร_ : (A B : obj) โฆ _ : Product A B โฆ โ obj
A ร B = object
  
โฉ_,_โช :
  {A B X : obj}
  (f : X ~> A)
  (g : X ~> B)
  โฆ P : Product A B โฆ
  โ ------------------
  โ! ฮป (h : X ~> A ร B) โ ฯโ โ h == f โง ฯโ โ h == g
โฉ f , g โช = IsProduct.to-product def f g

