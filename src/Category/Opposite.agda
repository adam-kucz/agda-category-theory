{-# OPTIONS --safe --exact-split --prop  #-}
module Category.Opposite where

open import Category.Definition

open import PropUniverses
open import Proposition.Identity using (_==_; refl)
open import Relation.Binary using (sym)

infix 159 _แตแต
_แตแต : (โ : Category ๐ฐ ๐ฑ) โ Category ๐ฐ ๐ฑ
โ แตแต = record
  { obj = obj
  ; _~>_ = ฮป X Y โ Y ~> X
  ; id = id
  ; _โ_ = ฮป g f โ f โ g
  ; left-unit = right-unit
  ; right-unit = left-unit
  ; assoc = ฮป h g f โ sym (assoc f g h)
  }
  where instance _ = โ

-- open import Function.Property using (Involutive; mk-involutive)

-- instance
--   Involutiveแตแต : Involutive (_แตแต {๐ฐ} {๐ฑ})
--   Involutiveแตแต = mk-involutive refl

dual :
  {X : (โ : Category ๐ฐ ๐ฑ) โ ๐ฒ ห}
  (A : (โ : Category ๐ฐ ๐ฑ) โ X โ)
  โ -------------------------------------
  (โ : Category ๐ฐ ๐ฑ) โ X (โ แตแต)
dual A โ = A (โ แตแต)

dualโ :
  {๐ : (โ : Category ๐ฐ ๐ฑ) โ ๐ฒ แต}
  (๐ด : (โ : Category ๐ฐ ๐ฑ) โ ๐ โ)
  โ -------------------------------------
  (โ : Category ๐ฐ ๐ฑ) โ ๐ (โ แตแต)
dualโ ๐ด โ = ๐ด (โ แตแต)

